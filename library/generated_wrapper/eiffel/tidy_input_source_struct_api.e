note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class TIDY_INPUT_SOURCE_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	sourcedata: POINTER
			-- Access member `sourceData`
		require
			exists: exists
		do
			Result := c_sourcedata (item)
		ensure
			result_correct: Result = c_sourcedata (item)
		end

	set_sourcedata (a_value: POINTER) 
			-- Change the value of member `sourceData` to `a_value`.
		require
			exists: exists
		do
			set_c_sourcedata (item, a_value)
		ensure
			sourcedata_set: a_value = sourcedata
		end

	getbyte: POINTER
			-- Access member `getByte`
		require
			exists: exists
		do
			Result := c_getbyte (item)
		ensure
			result_correct: Result = c_getbyte (item)
		end

	set_getbyte (a_value: POINTER) 
			-- Change the value of member `getByte` to `a_value`.
		require
			exists: exists
		do
			set_c_getbyte (item, a_value)
		ensure
			getbyte_set: a_value = getbyte
		end

	ungetbyte: POINTER
			-- Access member `ungetByte`
		require
			exists: exists
		do
			Result := c_ungetbyte (item)
		ensure
			result_correct: Result = c_ungetbyte (item)
		end

	set_ungetbyte (a_value: POINTER) 
			-- Change the value of member `ungetByte` to `a_value`.
		require
			exists: exists
		do
			set_c_ungetbyte (item, a_value)
		ensure
			ungetbyte_set: a_value = ungetbyte
		end

	eof: POINTER
			-- Access member `eof`
		require
			exists: exists
		do
			Result := c_eof (item)
		ensure
			result_correct: Result = c_eof (item)
		end

	set_eof (a_value: POINTER) 
			-- Change the value of member `eof` to `a_value`.
		require
			exists: exists
		do
			set_c_eof (item, a_value)
		ensure
			eof_set: a_value = eof
		end

feature {NONE} -- Implementation wrapper for struct struct _TidyInputSource

	sizeof_external: INTEGER 
		external
			"C inline use <eif_tidy.h>"
		alias
			"sizeof(struct _TidyInputSource)"
		end

	c_sourcedata (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_tidy.h>"
		alias
			"[
				((struct _TidyInputSource*)$an_item)->sourceData
			]"
		end

	set_c_sourcedata (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_tidy.h>"
		alias
			"[
				((struct _TidyInputSource*)$an_item)->sourceData =  (void*)$a_value
			]"
		ensure
			sourcedata_set: a_value = c_sourcedata (an_item)
		end

	c_getbyte (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_tidy.h>"
		alias
			"[
				((struct _TidyInputSource*)$an_item)->getByte
			]"
		end

	set_c_getbyte (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_tidy.h>"
		alias
			"[
				((struct _TidyInputSource*)$an_item)->getByte =  (TidyGetByteFunc)$a_value
			]"
		ensure
			getbyte_set: a_value = c_getbyte (an_item)
		end

	c_ungetbyte (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_tidy.h>"
		alias
			"[
				((struct _TidyInputSource*)$an_item)->ungetByte
			]"
		end

	set_c_ungetbyte (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_tidy.h>"
		alias
			"[
				((struct _TidyInputSource*)$an_item)->ungetByte =  (TidyUngetByteFunc)$a_value
			]"
		ensure
			ungetbyte_set: a_value = c_ungetbyte (an_item)
		end

	c_eof (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_tidy.h>"
		alias
			"[
				((struct _TidyInputSource*)$an_item)->eof
			]"
		end

	set_c_eof (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <eif_tidy.h>"
		alias
			"[
				((struct _TidyInputSource*)$an_item)->eof =  (TidyEOFFunc)$a_value
			]"
		ensure
			eof_set: a_value = c_eof (an_item)
		end

end
